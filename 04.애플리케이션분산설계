ㅇ 컴포넌트 식별
===============
    1. 컴포넌트 종류
       . 기존 CBO의 Component식별에서 MS간 연계를 위한 도메인 인터페이스/컴포넌트와 External 서비스 연계 컴포넌트가 추가로 식별 필요.
    
    2. 컴포넌트 식별방안
      . 도메인 인터페이스/컴포넌트
         - API설계에서 Service Mesh역할의 API를 도메인 인터페이스/컴포넌트로 식별함.
      . External 서비스 연계 컴포넌트
         - API설계에서 External Gateway역하롤 식별된 API로 정의함.
         
    3. 컴포넌트 의존관계
      . MS 내 컴포넌트 의존관계
          - MS 내 레이어의 호출구조는 순방향만 가능. 서비스 및 공통서비스는 동일 레이어 호출 가능
      . MS 간 컴포넌트 의존관계
          - 직접 호출이 아닌 DI를 통해서만 호출 가능
      . External 서비스 연계 컴포넌트 의존관계
           - 서비스 호출만 가능
    4. 모델 프로젝트 및 패키지 구조
      . 공통모델 프로젝트, 서비스 연계 모델 프로젝트, MS 모델 프로젝트로 3개의 프로젝트가 필요.
       - 공통 모델 프로젝트 : 전체 MS에서 공통으로 사용하는 프로젝트
       - 서비스 연계모델 프로젝트 : External서비스 연계 패키지, Internal서비스 연계 패키지
       - MS 모델 프로젝트 :구현하고자하는 서비스 프로젝트
       
    5. 서비스 연계 설계
      - internal 서비스 연계 설계
        a) 공통컴포넌트 오퍼레이션 설계
        b) 도메인 인터페이스 설계
        c) 도메인 컴포넌트 구현
        d) 도메인 인터페이스 사용
      - internal 서비스 연계거래 패턴별 설계
        . 다중 MS 동기거래 패턴
           - 오너 MS가 다른 MS를 호출 후 오너 MS가 응답결과를 조합하고 비즈니스 로직을 Orchestration하는 구조
           - 트랙잭션 관리는 오너 MS에서 관리를 하고 API Gateway는 단지 인증/인가, 디스커버리, 라우팅, 통신변환기능만 수행
           - API Composition 패턴이 가능한 경우 사용
        . 다중 MS 비동기거래패턴 - 단방향 통보 패턴
           - MS내 자체 로직을 처리하고 비동기로 다른 MS를 호출함.
           - CQRS패턴에 사용
           - 다른 MS가 시간이 오래걸릴 경우 사용 추천(상품 조회 후 상품금액 계산)
        . 다중 MS 비동기거래패턴 - 발행/비동기 응답패턴
           - 타 MS 호출 후 응답을 대기하여 그 결과에 따라서 후속 작업 진행.
           - 처리결과는 F/W이나 공유 cache나 DB를 통해서 처리결과를 polling하고 결과를 대기함.
           - Orchestration-based Saga패턴에 주로 사용
           - 후속작업실패에 따른 보상트랜잭션기능 필수.
        . 다중 MS 비동기거래패턴 - 발행/구동 패턴
            - MS자체의 선행기능과 선행기능 완료 후 후행기능으로 분리.(선행기능: 재고차감, 후행기능: 결과를 호출한 MS로 전달 기능)
           - 타 MS에서 발행한 이벤트 메세지를 구독하여 처리하고 성공하면 후행기능을 호출함.
           - 비동기 이벤트처리로 Choreography Saga 패턴적용이 필요한 경우.
           - 보상트랜잭션도 필수 고려.
